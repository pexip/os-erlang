--- a/erts/preloaded/src/init.erl
+++ b/erts/preloaded/src/init.erl
@@ -403,6 +403,7 @@
 	    terminate(Pid,Kernel,Reason), %% If Pid is a Kernel pid, halt()!
 	    boot_loop(BootPid,State);
 	{stop,Reason} ->
+	    debug(true, {stopping, boot_loop, Reason, State}),
 	    stop(Reason,State);
 	{From,fetch_loaded} ->   %% Fetch and reset initially loaded modules.
 	    From ! {init,State#state.loaded},
@@ -475,6 +476,7 @@
 	    terminate(Pid,Kernel,Reason), %% If Pid is a Kernel pid, halt()!
 	    loop(State);
 	{stop,Reason} ->
+	    debug(true, {stopping, loop, Reason, State}),
 	    stop(Reason,State);
 	{From,fetch_loaded} ->           %% The Loaded info is cleared in
 	    Loaded = State#state.loaded, %% boot_loop but is handled here 
@@ -610,11 +612,14 @@
 %%% -------------------------------------------------
 
 stop(Reason,State) ->
+    debug(true, {stopping, stop, Reason, State}),
     BootPid = State#state.bootpid,
     {_,Progress} = State#state.status,
     State1 = State#state{status = {stopping, Progress}},
+    debug(true, {stopping, clear_system, State}),
     %% There is no need to unload code if the system is shutting down
     clear_system(Reason=/=stop,BootPid,State1),
+    debug(true, {stopping, do_stop, State}),
     do_stop(Reason,State1).
 
 do_stop({restart,Mode},#state{start=Start, flags=Flags0, args=Args}) ->
@@ -625,7 +630,9 @@
 do_stop(reboot,_) ->
     halt();
 do_stop(stop,State) ->
+    debug(true, {stopping, stop_heart, State}),
     stop_heart(State),
+    debug(true, {stopping, halt, State}),
     halt();
 do_stop({stop,Status},State) ->
     stop_heart(State),
@@ -715,6 +722,7 @@
 %% {'EXIT',Parent,Reason} and terminate upon it!
 %%
 shutdown_kernel_pid(Pid, BootPid, Timer, State) ->
+    debug(true, {stopping, shutdown_kernel_pid, Pid}),
     Pid ! {'EXIT',BootPid,shutdown},
     shutdown_loop(Pid, Timer, State, []).
 
